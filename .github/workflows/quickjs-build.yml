name: QuickJS Build Matrix

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
       config: 
         - { 
             name: "Windows", 
             os: "windows-latest", 
             artifact: "qjs-windows",
             build_type: "Release",
             generator: "CodeBlocks - Unix Makefiles",
             compiler: {
               name: "tdm-gcc",
               version: "9.2.0"
             },
             archiver: "7z" 
           }
         - { 
             name: "Ubuntu 20.04", 
             os: "ubuntu-20.04", 
             artifact: "qjs-ubuntu-20_04",
             build_type: "Release",
             generator: "Unix Makefiles",
             archiver: "7z" 
           }
         - { 
             name: "Ubuntu 18.04", 
             os: "ubuntu-18.04", 
             artifact: "qjs-ubuntu-18_04",
             build_type: "Release",
             generator: "Unix Makefiles", 
             archiver: "7z" 
           }
         - { 
             name: "Ubuntu 16.04", 
             os: "ubuntu-16.04", 
             artifact: "qjs-ubuntu-16_04",
             build_type: "Release",
             generator: "Unix Makefiles",
             archiver: "7z" 
           }
         - { 
             name: "macOS", 
             os: "macos-latest", 
             artifact: "qjs-macOS.7z",
             build_type: "Release",
             generator: "Unix Makefiles",
             archiver: "7z" 
           }  
    steps:
    - uses: actions/checkout@v2
    - name: Print environment
      run: |
        echo "Name: ${{ matrix.config.name }}"
        echo "OS: ${{ matrix.config.os }}"
        echo "Generator: ${{ matrix.config.generator }}"
        echo "Archiver: ${{ matrix.config.archiver }}"
        echo "Artifact: ${{ matrix.config.artifact }}"
    - name: Install dependencies on Windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        echo "Install for windows ..."
        choco install cmake
        cmake --version
        make --version
        choco install wget
        wget --version
        choco install 7zip.install
        ${{ matrix.config.archiver }}
    - name: Install compiler on Windows
      if: startsWith(matrix.config.os, 'windows')
      shell: bash
      run: |
        wget -O ${{ matrix.config.compiler.name }}.zip https://github.com/napi-bindings/tdm-gcc/archive/v${{ matrix.config.compiler.version }}.zip
        ${{ matrix.config.archiver }} x tdm-gcc.zip -o/
    - name: Install dependencies on Linux
      if: startsWith(matrix.config.os, 'ubuntu')
      run: |
        echo "Install for Linux ..."
        sudo apt-get update
        sudo apt-get install build-essential -y
        sudo apt-get install cmake -y
        sudo apt-get install p7zip-full -y
        gcc --version
        cmake --version
        make --version
    - name: Install dependencies on macOS
      if: startsWith(matrix.config.os, 'macos')
      run: |
        echo "Install for macOs ..."
        brew install p7zip cmake
        cmake --version
        make --version
    - name: Configure on Unix system
      if: startsWith(matrix.config.os, 'macos') || startsWith(matrix.config.os, 'ubuntu')
      shell: bash
      run: |
        mkdir ./build
        mkdir ./qjs
        cmake \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -G "${{ matrix.config.generator }}" \
          -S ./ \
          -B ./build
    - name: Configure on Windows
      if: startsWith(matrix.config.os, 'windows')
      shell: bash
      run: |
        mkdir ./build
        mkdir ./qjs
        cmake \
          -DCMAKE_MAKE_PROGRAM=/${{ matrix.config.compiler.name }}-${{ matrix.config.compiler.version }}/bin/mingw32-make.exe \
          -DCMAKE_C_COMPILER=/${{ matrix.config.compiler.name }}-${{ matrix.config.compiler.version }}/bin/gcc.exe \
          -DCMAKE_CXX_COMPILER=/${{ matrix.config.compiler.name }}-${{ matrix.config.compiler.version }}/bin/g++.exe \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -G "${{ matrix.config.generator }}" \
          -S ./ \
          -B ./build
    - name: Build
      shell: bash
      run: cmake --build ./build --config ${{ matrix.config.build_type }}
    - name: "Prepare"
      shell: bash
      run: |
        cp ./build/libqjs.a ./qjs/libqjs.a
        cp -R ./include ./qjs/include
        cd ./qjs
        ls -laR
        ${{ matrix.config.archiver }} a ../${{ matrix.config.artifact }} .
        ls .laR
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}





