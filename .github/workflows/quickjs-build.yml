name: QuickJS Build Matrix

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
       config: 
         - { 
             name: "Windows", 
             os: "windows-latest", 
             artifact: "qjs-windows.7z",
             build_type: "Release",
             generator: "CodeBlocks - Unix Makefiles",
             cc: "gcc", 
             cxx: "g++", 
             archiver: "7z a" 
           }
         - { 
             name: "Ubuntu 20.04", 
             os: "ubuntu-20.04", 
             artifact: "qjs-ubuntu-20_04.7z",
             build_type: "Release",
             generator: "Unix Makefiles",
             cc: "gcc", 
             cxx: "g++", 
             archiver: "7z a" 
           }
         - { 
             name: "Ubuntu 18.04", 
             os: "ubuntu-18.04", 
             artifact: "qjs-ubuntu-18_04.7z",
             build_type: "Release",
             generator: "Unix Makefiles",
             cc: "gcc", 
             cxx: "g++", 
             archiver: "7z a" 
           }
         - { 
             name: "Ubuntu 16.04", 
             os: "ubuntu-16.04", 
             artifact: "qjs-ubuntu-16_04.7z",
             build_type: "Release",
             generator: "Unix Makefiles",
             cc: "gcc", 
             cxx: "g++", 
             archiver: "7z a" 
           }
         - { 
             name: "macOS", 
             os: "macos-latest", 
             artifact: "macOS.7z",
             build_type: "Release",
             generator: "Unix Makefiles",
             cc: "clang", 
             cxx: "clang++", 
             archiver: "7z a" 
           }  
    steps:
    - uses: actions/checkout@v2
    - name: Print environment
      run: |
        echo "Name: ${{ matrix.config.name }}"
        echo "OS: ${{ matrix.config.os }}"
        echo "Artifact: ${{ matrix.config.artifact }}"
        echo "C compiler: ${{ matrix.config.cc }}"
        echo "C++ compiler: ${{ matrix.config.cxx }}"
        echo "Generator: ${{ matrix.config.generator }}"
        echo "Archiver: ${{ matrix.config.archiver }}"
        echo "Artifact: ${{ matrix.config.artifact }}"
    - name: Install dependencies on Windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        echo "Install for winrdows ..."
        choco install cmake
        cmake --version
        gcc --version
        make --version
    - name: Install dependencies on Linux
      if: startsWith(matrix.config.os, 'ubuntu')
      run: |
        echo "Install for Linux ..."
        sudo apt-get update
        sudo apt-get install build-essential -y
        sudo apt-get install cmake -y
        sudo apt-get install p7zip-full -y
        gcc --version
        cmake --version
        make --version
    - name: Install dependencies on macOS
      if: startsWith(matrix.config.os, 'macos')
      run: |
        echo "Install for macOs ..."
        brew install p7zip cmake
        cmake --version
        make --version
    - name: Configure
      shell: bash
      run: |
        mkdir build
        mkdir qjs
        cmake \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -G "${{ matrix.config.generator }}" \
          -S ./ \
          -B ./build
    - name: Build
      shell: bash
      run: cmake --build ./build --config ${{ matrix.config.build_type }}
    - name: "Prepare"
      shell: bash
      run: |
        cp ./build/libqjs.a ./qjs/libqjs.a
        cp -R ./include ./qjs/include
        ls -laR
        ${{ matrix.config.archiver }} ${{ matrix.config.artifact }} .





